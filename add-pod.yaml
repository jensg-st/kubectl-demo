functions:
- id: kubectl
  image: direktiv.azurecr.io/functions/kubectl:1.0
  type: knative-workflow
states:

# make sure name and server are provided
- id: validate
  type: validate
  schema:
    title: Create Httpd Pod
    type: object
    required: ["name", "server"]
    properties:
      name:
        type: string
        title: Name
      server:
        type: string
        title: Name
  transition: kubectl

# run kubectl
- id: kubectl
  type: action
  action:
    secrets: ["kubeconfig"]
    function: kubectl
    files:
    - key: pod.yaml
      scope: workflow
    input: 
      kubeconfig: jq(.secrets.kubeconfig | @base64)
      commands:
      # replace APPNAME in the template file with provided 'name' variable
      - command: sed -i 's/PODNAME/jq(.name)/g' pod.yaml
      # apply file
      - command: kubectl apply -s jq(.server) -f pod.yaml
      # get the pod information
      - command: kubectl get pods -s jq(.server) --selector=app=jq(.name)  -n direktiv-services-direktiv --output json
        silent: true
  transform:
    # only return the results of the last command, basically the json for the new pod
    pod: jq(.return.kubectl[2].result.items[0])
